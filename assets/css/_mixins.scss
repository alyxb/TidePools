@mixin reset {
  margin: 0px !important;
  padding: 0px !important;
  border: none;
  background: transparent;
}
@mixin hidetext {
  display: block;
  overflow: hidden;
  background-repeat: no-repeat;
  text-align: left;
  text-indent: -999em;
  direction: ltr;
}
@mixin ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
// Clearfix for clearing floats like a boss h5bp.com/q
@mixin clearfix {
  zoom: 1;
  &:before, &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}
// Center-align a block level element
@mixin center-block {
 display: block;
 margin: 0 auto;
}
// Sizing shortcuts
@mixin size($height: 5px, $width: 5px) {
  width: $width;
  height: $height;
}
@mixin square($size: 5px) {
 @include size($size, $size);
}
@mixin transform($rotate: 90deg, $scale: 1, $skew: 1deg, $left: 10px, $top: 10px) {
  -webkit-transform: rotate($rotate) scale($scale) skew($skew) translate($left, $top);
  -moz-transform: rotate($rotate) scale($scale) skew($skew) translate($left, $top);
  -ms-transform: rotate($rotate) scale($scale) skew($skew) translate($left, $top);
  -o-transform: rotate($rotate) scale($scale) skew($skew) translate($left, $top);
  transform: rotate($rotate) scale($scale) skew($skew) translate($left, $top);
}
// Input placeholder text
@mixin placeholder($color: $grayLight) {
  :-moz-placeholder {
    color: $color;
  }
  ::-webkit-input-placeholder {
    color: $color;
  }
}
// Border Radius
@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}
@mixin border-radius-custom($topleft: 5px, $topright: 5px, $bottomleft: 5px, $bottomright: 5px) {
  -webkit-border-top-right-radius:    $topright;
  -webkit-border-bottom-right-radius: $bottomright;
  -webkit-border-bottom-left-radius:  $bottomleft;
  -webkit-border-top-left-radius:     $topleft;
  -moz-border-radius-topright:        $topright;
  -moz-border-radius-bottomright:     $bottomright;
  -moz-border-radius-bottomleft:      $bottomleft;
  -moz-border-radius-topleft:         $topleft;
  border-top-right-radius:            $topright;
  border-bottom-right-radius:         $bottomright;
  border-bottom-left-radius:          $bottomleft;
  border-top-left-radius:             $topleft;
  -moz-background-clip:    padding; 
  -webkit-background-clip: padding-box; 
  background-clip:         padding-box; 
}
// Drop shadows
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}
// Transitions
@mixin transition($prop: all, $time: 1s, $ease: linear) {
  -webkit-transition: $prop $time $ease;
  -moz-transition: $prop $time $ease;
  -ms-transition: $prop $time $ease;
  -o-transition: $prop $time $ease;
  transition: $prop $time $ease;
}
// Background clipping
@mixin background-clip($clip) {
 background-clip: $clip;
 -webkit-background-clip: $clip;
 -moz-background-clip: $clip;
}
// Add an alphatransparency value to any background or border color (via Elyse Holladay)
@mixin translucent-background($color: $white, $alpha: 1) {
  background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
}
@mixin translucent-border($color: $white, $alpha: 1) {
  border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
  background-clip: padding-box;
}
// Gradients
@mixin gradient($origin: left, $start: #ffffff, $stop: #000000) {
  background-color: $start;
  background-image: -webkit-linear-gradient($origin, $start, $stop);
  background-image: -moz-linear-gradient($origin, $start, $stop);
  background-image: -o-linear-gradient($origin, $start, $stop);
  background-image: -ms-linear-gradient($origin, $start, $stop);
  background-image: linear-gradient($origin, $start, $stop);
}
@mixin quick-gradient($origin: left, $alpha: 0.2) {
  background-image: -webkit-linear-gradient($origin, rgba(0,0,0,0.0), rgba(0,0,0,$alpha));
  background-image: -moz-linear-gradient($origin, rgba(0,0,0,0.0), rgba(0,0,0,$alpha));
  background-image: -o-linear-gradient($origin, rgba(0,0,0,0.0), rgba(0,0,0,$alpha));
  background-image: -ms-linear-gradient($origin, rgba(0,0,0,0.0), rgba(0,0,0,$alpha));
  background-image: linear-gradient($origin, rgba(0,0,0,0.0), rgba(0,0,0,$alpha));
}
// Reflection
@mixin reflect($length: 50%, $opacity: 0.2){
  -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop($length, transparent), to(rgba(255,255,255,$opacity)));
}
// Opacity
@mixin opacity($opacity: 100) {
  opacity: $opacity / 100;
  filter: "alpha(opacity=#{$opacity})";
  -khtml-opacity: $opacity / 100;
  -moz-opacity: $opacity / 100;
}
// Font Stacks
@mixin font-shorthand($weight: normal, $size: 14px, $lineHeight: 20px) {
  font-weight: $weight;
  font-size: $size;
  line-height: $lineHeight;
}
@mixin font-sans-serif($weight: normal, $size: 14px, $lineHeight: 20px) {
  font-weight: $weight;
  font-size: $size;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: $lineHeight;
}
@mixin font-serif($weight: normal, $size: 14px, $lineHeight: 20px) {
  font-weight: $weight;
  font-size: $size;
  font-family: "Georgia", Times New Roman, Times, serif;
  line-height: $lineHeight;
}
@mixin font-monospace($weight: normal, $size: 12px, $lineHeight: 20px) {
  font-weight: $weight;
  font-size: $size;
  font-family: "Monaco", Courier New, monospace;
  line-height: $lineHeight;
}
/*from http://sachagreif.com/useful-sass-mixins/ */
@function black($opacity){
  @return rgba(0,0,0,$opacity)
}
@function white($opacity){
  @return rgba(255,255,255,$opacity)
}
@mixin box-emboss($opacity, $opacity2){
  box-shadow:white($opacity) 0 1px 0, inset black($opacity2) 0 1px 0;
}
@mixin letterpress($opacity){
  text-shadow:white($opacity) 0 1px 0;
}
@mixin hide-text {
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}
@mixin navigation-list {
  list-style-type:none;
  padding:0;
  margin:0;
  overflow:hidden;
  > li{
    display:block;
    float:left;
    &:last-child{
      margin-right:0px;
    }
  }
}
/* adapted from http://css-tricks.com/snippets/css/useful-css3-less-mixins/ */
@mixin translate3d ($x, $y: 0, $z: 0) {
  -webkit-transform:       translate3d($x, $y, $z);
  -moz-transform:    translate3d($x, $y, $z);
  -ms-transform:     translate3d($x, $y, $z);
  -o-transform:      translate3d($x, $y, $z);
}
@mixin perspective ($value: 1000) {
  -webkit-perspective:  $value;
  -moz-perspective:   $value;
  -ms-perspective:  $value;
  perspective:    $value;
}
@mixin transform-origin ($x:center, $y:center) {
  -webkit-transform-origin: $x $y;
  -moz-transform-origin:    $x $y;
  -ms-transform-origin:     $x $y;
  -o-transform-origin:      $x $y;
}